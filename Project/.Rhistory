geom_sf(data = mundo, aes(geometry = geom), fill = "grey69", colour = "white") +
geom_sf(aes(fill = debt_to_GDP_)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt", direction = -1) +
ggtitle("Debt-to-GDP ratio") +
labs(subtitle = "Arslanalp dataset") +
theme(panel.background = element_rect(fill = "white")) +
transition_states(year,
transition_length = 2,
state_length = 1) +
coord_sf(ylim = c(-50, 90))
library(gganimate)
install.packages("gganimate")
library(gganimate)
library(ggplot2)
library(gganimate)
library(GetBCBData)
my.id <- c('PIB a preços de mercado SCN-2010' = 22109)
selic <- gbcbd_get_series(my.id, first.date = "1995-01-01")
selic %>%
View
PIB <- gbcbd_get_series(my.id, first.date = "1995-01-01")
PIB %>%
View
PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
View
Serie <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB)) %>%
view
Serie <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB)) %>%
select(PIB, ln_PIB, t) %>%
view
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB)) %>%
select(PIB, ln_PIB, t) %>%
ggplot() +
geom_line(aes(t,ln_PIB), colour = "blue")
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB)) %>%
select(PIB, ln_PIB, t) %>%
ggplot() +
geom_line(aes(t,ln_PIB), colour = "blue")
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB)) %>%
select(PIB, ln_PIB, t) %>%
ggplot() +
geom_line(aes(x = t,y = ln_PIB), colour = "blue")
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB)) %>%
select(PIB, ln_PIB, t) %>%
ggplot() +
geom_abline(aes(x = t,y = ln_PIB), colour = "blue")
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB)) %>%
select(PIB, ln_PIB, t) %>%
ggplot() +
geom_line(aes(x = t, y = ln_PIB), colour = "blue")
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB)) %>%
select(PIB, ln_PIB, t)
ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line()
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB)) %>%
select(PIB, ln_PIB, t) %>%
ggplot(aes(x = t, y = ln_PIB)) +
geom_line()
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB)) %>%
select(PIB, ln_PIB, t) %>%
ggplot(aes(x = t, y = ln_PIB)) +
geom_line()
ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line()
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB)) %>%
select(PIB, ln_PIB, t)
ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line()
ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue")
ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
theme_clean()
ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(subtitle = "Elaboração própria") +
theme_economist()
ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(subtitle = "Elaboração própria") +
theme_wsj()
ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(subtitle = "Fonte: BCB") +
theme_wsj()
ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(subtitle = "Fonte: IBGE") +
theme_wsj()
Series <- Series %>%
mutate(f_diff = ln_PIB - lag(ln_PIB)) %>%
view
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB), f_diff = ln_PIB - lag(ln_PIB)) %>%
select(PIB, ln_PIB, t)
ggplot(data = Series, aes(x = t, y = f_diff)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(subtitle = "Fonte: IBGE") +
theme_wsj()
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB), f_diff = ln_PIB - lag(ln_PIB)) %>%
select(PIB, ln_PIB, t)
ggplot(data = Series, aes(x = t, y = f_diff)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(subtitle = "Fonte: IBGE") +
theme_wsj()
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB), first_diff = ln_PIB - lag(ln_PIB)) %>%
select(PIB, ln_PIB, t)
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB), first_diff = ln_PIB - lag(ln_PIB)) %>%
select(PIB, ln_PIB, t, f_diff)
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB), first_diff = ln_PIB - lag(ln_PIB)) %>%
select(PIB, ln_PIB, t, f_diff)
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB), first_diff = ln_PIB - lag(ln_PIB)) %>%
select(PIB, ln_PIB, t, first_diff)
ggplot(data = Series, aes(x = t, y = first_diff)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(subtitle = "Fonte: IBGE") +
theme_wsj()
ggplot(data = Series, aes(x = t, y = first_diff)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(subtitle = "Fonte: IBGE") +
theme_clean()
ggplot(data = Series, aes(x = t, y = first_diff)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
theme_clean()
install.packages("forecast")
library(forecast)
Correl %>% Series %>%
ggtsdisplay(first_diff) #pra FAC e FACP
Correl <-  Series %>%
ggtsdisplay(first_diff) #pra FAC e FACP
ggtsdisplay(Series$first_diff) #pra FAC e FACP
ggtsdisplay(Series$first_diff, lag.max = 12) #pra FAC e FACP
ggtsdisplay(Series$first_diff, lag.max = 12, plot.type = "" ) #pra FAC e FACP
ggtsdisplay(Series$first_diff, lag.max = 12, plot.type = "histogram") #pra FAC e FACP
ggtsdisplay(Series$first_diff, lag.max = 12, plot.type = "partial") #pra FAC e FACP
ggtsdisplay(Series$first_diff, lag.max = 12, plot.type = "partial", theme = clean) #pra FAC e FACP
ggtsdisplay(Series$first_diff, lag.max = 12, plot.type = "partial", theme = "clean") #pra FAC e FACP
ggtsdisplay(Series$first_diff, lag.max = 12, plot.type = "partial") #pra FAC e FACP
ggtsdisplay(Series$first_diff, lag.max = 12, plot.type = "partial") +
theme_bw()#pra FAC e FACP
# FAC e FACP:
ggtsdisplay(Series$first_diff, lag.max = 12, plot.type = "partial") +
theme_clean()
# FAC e FACP:
ggtsdisplay(Series$first_diff, lag.max = 20, plot.type = "partial") +
theme_clean() +
theme_clean() +
theme_clean()
# FAC e FACP:
ggtsdisplay(Series$first_diff, lag.max = 20, plot.type = "partial",
main = "Bla")
# FAC e FACP:
ggtsdisplay(Series$first_diff, lag.max = 20,
main = "Bla")
# FAC e FACP:
ggtsdisplay(Series$first_diff, lag.max = 20, main = "Bla") +
theme_clean()
# Modelo:
Arima(Series$first_diff, order = c(1, 2, 3), include.constant = TRUE)
# Modelo:
Arima(Series$first_diff, order = c(3), include.constant = TRUE)
# Modelo:
Arima(Series$first_diff, order = c(3, 1, 0), include.constant = TRUE)
# Modelo:
Arima(Series$first_diff, order = c(3, 0, 0), include.constant = TRUE)
# Modelo:
adjusted_series <- Arima(Series$first_diff, order = c(3, 0, 0), include.constant = TRUE)
# Modelo:
adj_series <- Arima(Series$first_diff, order = c(3, 0, 0), include.constant = TRUE)
ggplot(data = adj_series)
# Modelo:
adj_series <- Arima(Series$first_diff, order = c(3, 0, 0), include.constant = TRUE) %>%
view
# Modelo:
adj_series <- Arima(Series$first_diff, order = c(3, 0, 0), include.constant = TRUE)
# Modelo:
adj_series <- Arima(Series$first_diff, order = c(3, 0, 0), include.constant = TRUE)
adj_series
auto_plot(adj_series)
autoplot(adj_series)
inv_roots <- autoplot(adj_series)
str(inv_roots)
install.packages("ipeadatar")
library(ipeadatar)
search_series()
search_series() %>%
view
search_series() %>%
contains("PIB")
search_series() %>%
contains("PIB") %>%
view
filter(str_detect(name, "PIB") %>%
view
filter(str_detect(name, "PIB")
str(inv_roots)
inv_roots <- autoplot(adj_series)
stc <- function(a, b){
k = (2 * pi)/(acos(a/(sqrt(a^2+b^2))))
}
2*pi/1,57
2*pi/1.57
stc(0, 0)
cat(k)
stc <- function(a, b){
k = (2 * pi)/(acos(a/(sqrt(a^2+b^2))))
cat(k)
}
stc(0, 0)
print(k)
stc <- function(a, b){
k = (2 * pi)/(acos(a/(sqrt(a^2+b^2))))
print(k)
}
stc(0, 0)
stc <- function(a, b){
(2 * pi)/(acos(a/(sqrt(a^2+b^2))))
}
stc(0, 0)
(2 * pi)/(acos(a/(sqrt(0^2+0^2))))
(2 * pi)/(acos(0/(sqrt(0^2+0^2))))
(2 * pi)/(cos^1(0/(sqrt(0^2+0^2))))
(2 * pi)/(cos^1(0/(sqrt(0^2+0^2))))
(2 * pi)/((cos^1)(0/(sqrt(0^2+0^2))))
(2 * pi)/((cosine^1)(0/(sqrt(0^2+0^2))))
(2 * pi)/(cosine(0/(sqrt(0^2+0^2))))
(2 * pi)/(cosine(0/(sqrt(0^2+0^2))))
(2 * pi)/(cos(0/(sqrt(0^2+0^2))))
cos(0)
acos(0)
stc <- function(a, b){
z = a/(sqrt(a^2+b^2)))
(2 * pi)/(acos(z)
}
stc <- function(a, b){
z = a/(sqrt(a^2+b^2)))
k = (2 * pi)/(acos(z)
}
stc <- function(a, b){
z = a/(sqrt(a^2+b^2))
k = (2 * pi)/acos(z)
}
stc(0, 0)
stc <- function(a, b){
z = a/(sqrt(a^2+b^2))
(2 * pi)/acos(z)
}
stc(0, 0)
2*pi/1.57
z = a/(sqrt(a^2+b^2))
z = a/(sqrt(0^2+0^2))
z = 0/(sqrt(0^2+0^2))
z
sqrt(0)
0/sqrt(0)
(2 * pi)/(acos(1/(sqrt(1^2+1^2))))
stc <- function(a, b){
z = a/(sqrt(a^2+b^2))
w = acos(z)
(2 * pi)/w
}
stc(1,1)
str(inv_roots)
inv <- as.data.frame(inv_roots)
type(inv_roots)
class(inv_roots)
# Modelo:
adj_series <- Arima(Series$first_diff, order = c(3, 0, 0), include.constant = TRUE)
adj_series
inv_roots <- autoplot(adj_series)
inv_roots
(cos(0))^1
(cos(0))^1
(cos(0))^1
(acos(0))
# Calculos:
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB), first_diff = (ln_PIB - lag(ln_PIB))/lag(ln_PIB)) %>%
select(PIB, ln_PIB, t, first_diff)
# Visualização:
ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(subtitle = "Fonte: IBGE") +
theme_wsj()
ggplot(data = Series, aes(x = t, y = first_diff)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
theme_clean()
# FAC e FACP:
ggtsdisplay(Series$first_diff, lag.max = 20, main = "Bla")
# Modelo:
adj_series <- Arima(Series$first_diff, order = c(3, 0, 0), include.constant = TRUE)
inv_roots <- autoplot(adj_series)
(inv_roots <- autoplot(adj_series))
# Modelo:
series_hat <- Arima(Series$first_diff, order = c(3, 0, 0), include.constant = TRUE)
(inv_roots <- autoplot(series_hat))
library(plotly)
ggplotly(inv_roots)
# FAC e FACP:
ggtsdisplay(Series$first_diff, lag.max = 20, main = "Bla")
# Visualização:
(graph_lnPIB <- ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(subtitle = "Fonte: IBGE") +
theme_clean())
# Visualização:
(graph_lnPIB <- ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(caption = "Fonte: IBGE") +
theme_clean())
# Visualização:
(graph_lnPIB <- ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) - trimestral") +
labs(caption = "Fonte: IBGE") +
theme(
plot.title = element_text(hjust = 0.5)) +
theme_clean())
# Visualização:
(graph_lnPIB <- ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) - trimestral") +
labs(caption = "Fonte: IBGE") +
theme_clean() +
theme(plot.title = element_text(hjust = 0.5)))
# Visualização:
(graph_lnPIB <- ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) - trimestral") +
labs(caption = "Fonte: IBGE") +
theme_clean() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x=element_blank()))
ggplot(data = Series, aes(x = t, y = first_diff)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(caption = "Fonte: IBGE") +
theme_clean() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank()))
ggplot(data = Series, aes(x = t, y = first_diff)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(caption = "Fonte: IBGE") +
theme_clean() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank()))
(graph_first_diff <- ggplot(data = Series, aes(x = t, y = first_diff)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(caption = "Fonte: IBGE") +
theme_clean() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank()))
(graph_first_diff <- ggplot(data = Series, aes(x = t, y = first_diff)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) trimestral") +
labs(caption = "Fonte: IBGE") +
theme_clean() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank()))
(graph_first_diff <- ggplot(data = Series, aes(x = t, y = first_diff)) +
geom_line(colour = "blue") +
ggtitle("Série diff_ln(PIB) trimestral") +
labs(caption = "Fonte: IBGE") +
theme_clean() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank()))
# FAC e FACP:
ggtsdisplay(Series$first_diff, lag.max = 20, main = "Correlograma")
acf(Series$first_diff, lag.max = 20)
acf(Series$first_diff, lag.max = 20)
acf(Series$first_diff, lag.max = 20, type = c("correlation"),  plot = TRUE)
acf(Series$first_diff, lag.max = 20, type = c("correlation"),  plot = TRUE, na.action = na.pass)
pacf(Series$first_diff, lag.max = 20, type = c("correlation"),  plot = TRUE, na.action = na.pass)
pacf(Series$first_diff, lag.max = 20, type = c("correlation"),  plot = TRUE, na.action = na.pass)
pacf(Series$first_diff, lag.max = 20, plot = TRUE, na.action = na.pass)
acf(Series$first_diff, lag.max = 20, plot = TRUE, na.action = na.pass)
# FAC e FACP:
ggtsdisplay(Series$first_diff, lag.max = 20, main = "Correlograma")
acf(Series$first_diff, lag.max = 20, plot = TRUE, na.action = na.pass)
acf(Series$first_diff, lag.max = 20, plot = TRUE, na.action = na.pass)
acf(Series$first_diff, lag.max = 20, type = c("correlation"),  plot = TRUE, na.action = na.pass)
# Calculos:
Series <- PIB %>%
rename(PIB = value, t = ref.date) %>%
select(PIB, t) %>%
mutate(ln_PIB = log(PIB), first_diff = (ln_PIB - lag(ln_PIB))) %>%
select(PIB, ln_PIB, t, first_diff)
# Visualização:
(graph_lnPIB <- ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) - trimestral") +
labs(caption = "Fonte: IBGE") +
theme_clean() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x=element_blank()))
(graph_first_diff <- ggplot(data = Series, aes(x = t, y = first_diff)) +
geom_line(colour = "blue") +
ggtitle("Série diff_ln(PIB) trimestral") +
labs(caption = "Fonte: IBGE") +
theme_clean() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank()))
# FAC e FACP:
ggtsdisplay(Series$first_diff, lag.max = 20, main = "Correlograma")
acf(Series$first_diff, lag.max = 20, type = c("correlation"),  plot = TRUE, na.action = na.pass)
# Visualização:
(graph_lnPIB <- ggplot(data = Series, aes(x = t, y = ln_PIB)) +
geom_line(colour = "blue") +
ggtitle("Série ln(PIB) - trimestral") +
labs(caption = "Fonte: IBGE") +
theme_clean() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x=element_blank()))
(graph_first_diff <- ggplot(data = Series, aes(x = t, y = first_diff)) +
geom_line(colour = "blue") +
ggtitle("Série diff_ln(PIB) trimestral") +
labs(caption = "Fonte: IBGE") +
theme_clean() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank()))
# FAC e FACP:
ggtsdisplay(Series$first_diff, lag.max = 20, main = "Correlograma")
acf(Series$first_diff, lag.max = 20, type = c("correlation"),  plot = TRUE, na.action = na.pass)
pacf(Series$first_diff, lag.max = 20, plot = TRUE, na.action = na.pass)
# Modelo:
series_hat <- Arima(Series$first_diff, order = c(3, 0, 0), include.constant = TRUE)
series_hat
series_hat %>% view
series_hat
(inv_roots <- autoplot(series_hat))
(inv_roots <- autoplot(series_hat))
(inv_roots <- autoplot(series_hat))
ggplotly(inv_roots)
inv_roots <- autoplot(series_hat)
inv_roots
library(gganimate)
devtools::install_github('thomasp85/gganimate')
devtools::install_github('thomasp85/gganimate')
install.packages('gganimate')
library(gganimate)
devtools::install_github('thomasp85/tweenr')
devtools::install_github('thomasp85/transformr')
devtools::install_github('thomasp85/tweenr')
